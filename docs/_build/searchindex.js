Search.setIndex({"alltitles": {"Module contents": [[2, "module-taker"]], "Submodules": [[2, "submodules"]], "taker": [[1, null]], "taker documentation": [[0, null]], "taker package": [[2, null]], "taker.activations module": [[2, "module-taker.activations"]], "taker.data_classes module": [[2, "module-taker.data_classes"]], "taker.detoxify module": [[2, "module-taker.detoxify"]], "taker.eval module": [[2, "module-taker.eval"]], "taker.hooks module": [[2, "module-taker.hooks"]], "taker.mia module": [[2, "module-taker.mia"]], "taker.model module": [[2, "module-taker.model"]], "taker.model_maps module": [[2, "module-taker.model_maps"]], "taker.model_old module": [[2, "taker-model-old-module"]], "taker.model_repos module": [[2, "module-taker.model_repos"]], "taker.nn module": [[2, "module-taker.nn"]], "taker.parser module": [[2, "module-taker.parser"]], "taker.prune module": [[2, "module-taker.prune"]], "taker.scoring module": [[2, "module-taker.scoring"]], "taker.texts module": [[2, "module-taker.texts"]], "taker.vit_processor module": [[2, "module-taker.vit_processor"]]}, "docnames": ["index", "modules", "taker"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "modules.rst", "taker.rst"], "indexentries": {"accuracy (taker.data_classes.evalalloutput attribute)": [[2, "taker.data_classes.EvalAllOutput.accuracy", false]], "act_fn (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.act_fn", false]], "activationcollector (class in taker.data_classes)": [[2, "taker.data_classes.ActivationCollector", false]], "activationoverview (class in taker.data_classes)": [[2, "taker.data_classes.ActivationOverview", false]], "activationsummary (class in taker.data_classes)": [[2, "taker.data_classes.ActivationSummary", false]], "activationsummaryholder (class in taker.data_classes)": [[2, "taker.data_classes.ActivationSummaryHolder", false]], "add() (taker.data_classes.activationcollector method)": [[2, "taker.data_classes.ActivationCollector.add", false]], "add() (taker.data_classes.evalalloutput method)": [[2, "taker.data_classes.EvalAllOutput.add", false]], "add() (taker.data_classes.rundatahistory method)": [[2, "taker.data_classes.RunDataHistory.add", false]], "add() (taker.eval.losstracker method)": [[2, "taker.eval.LossTracker.add", false]], "add_all() (taker.data_classes.activationcollector method)": [[2, "taker.data_classes.ActivationCollector.add_all", false]], "add_all() (taker.eval.losstracker method)": [[2, "taker.eval.LossTracker.add_all", false]], "add_hook() (taker.hooks.hookconfig method)": [[2, "taker.hooks.HookConfig.add_hook", false]], "add_token() (taker.hooks.neuronreplace method)": [[2, "taker.hooks.NeuronReplace.add_token", false]], "additional_datasets (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.additional_datasets", false]], "all_hooks (taker.hooks.hookmap property)": [[2, "taker.hooks.HookMap.all_hooks", false]], "architecture (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.architecture", false]], "arg_items() (taker.data_classes.pruningconfig method)": [[2, "taker.data_classes.PruningConfig.arg_items", false]], "arg_keys() (taker.data_classes.pruningconfig method)": [[2, "taker.data_classes.PruningConfig.arg_keys", false]], "attn (taker.data_classes.activationoverview attribute)": [[2, "taker.data_classes.ActivationOverview.attn", false]], "attn_eps (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_eps", false]], "attn_frac (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_frac", false]], "attn_mode (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_mode", false]], "attn_offset_mode (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_offset_mode", false]], "attn_prune_heads (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_prune_heads", false]], "attn_prune_heads_mode (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_prune_heads_mode", false]], "attn_scale (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.attn_scale", false]], "attn_scores_soft_cap (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.attn_scores_soft_cap", false]], "attn_scoring (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.attn_scoring", false]], "attn_types (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.attn_types", false]], "batch_size (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.batch_size", false]], "build_gemma2_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_gemma2_layer_map", false]], "build_gemma_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_gemma_layer_map", false]], "build_gpt2_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_gpt2_layer_map", false]], "build_gpt_neox_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_gpt_neox_layer_map", false]], "build_llama_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_llama_layer_map", false]], "build_mistral_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_mistral_layer_map", false]], "build_opt_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_opt_layer_map", false]], "build_phi3_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_phi3_layer_map", false]], "build_phi_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_phi_layer_map", false]], "build_roberta_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_roberta_layer_map", false]], "build_t5_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_t5_layer_map", false]], "build_vit_layer_map() (in module taker.model_maps)": [[2, "taker.model_maps.build_vit_layer_map", false]], "calculate_areas() (taker.data_classes.rundatahistory method)": [[2, "taker.data_classes.RunDataHistory.calculate_areas", false]], "center_unembed() (taker.model.model method)": [[2, "taker.model.Model.center_unembed", false]], "choose_attn_heads_by() (in module taker.activations)": [[2, "taker.activations.choose_attn_heads_by", false]], "choose_attn_heads_by_mean() (in module taker.activations)": [[2, "taker.activations.choose_attn_heads_by_mean", false]], "choose_attn_heads_by_median() (in module taker.activations)": [[2, "taker.activations.choose_attn_heads_by_median", false]], "choose_functions() (in module taker.eval)": [[2, "taker.eval.choose_functions", false]], "cli_parser() (in module taker.parser)": [[2, "taker.parser.cli_parser", false]], "collect_prob() (in module taker.mia)": [[2, "taker.mia.collect_prob", false]], "collect_recent_attn_pre_out() (taker.model.model method)": [[2, "taker.model.Model.collect_recent_attn_pre_out", false]], "collect_recent_mlp_pre_out() (taker.model.model method)": [[2, "taker.model.Model.collect_recent_mlp_pre_out", false]], "collection_sample_size (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.collection_sample_size", false]], "compile() (taker.data_classes.dtypemap method)": [[2, "taker.data_classes.DtypeMap.compile", false]], "components_loop() (taker.model.model method)": [[2, "taker.model.Model.components_loop", false]], "configclass (class in taker.model_maps)": [[2, "taker.model_maps.ConfigClass", false]], "convert_hf_model_config() (in module taker.model_maps)": [[2, "taker.model_maps.convert_hf_model_config", false]], "cripple (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.cripple", false]], "d_head (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.d_head", false]], "d_mlp (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.d_mlp", false]], "d_model (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.d_model", false]], "d_vocab (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.d_vocab", false]], "dataset_custom_load_fn (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_custom_load_fn", false]], "dataset_filter (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_filter", false]], "dataset_has_test_split (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_has_test_split", false]], "dataset_image_key (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_image_key", false]], "dataset_image_label_key (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_image_label_key", false]], "dataset_name (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_name", false]], "dataset_repo (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_repo", false]], "dataset_repo (taker.eval.mmlugenerator attribute)": [[2, "taker.eval.MmluGenerator.dataset_repo", false]], "dataset_split (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_split", false]], "dataset_subset (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_subset", false]], "dataset_text_key (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_text_key", false]], "dataset_text_label_key (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_text_label_key", false]], "dataset_type (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.dataset_type", false]], "datasetfilters (class in taker.texts)": [[2, "taker.texts.DatasetFilters", false]], "datasets (taker.data_classes.pruningconfig property)": [[2, "taker.data_classes.PruningConfig.datasets", false]], "decode() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.decode", false]], "default_config() (taker.model.model static method)": [[2, "taker.model.Model.default_config", false]], "delete_attn_neurons() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.delete_attn_neurons", false]], "delete_mlp_neurons() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.delete_mlp_neurons", false]], "delete_neurons() (taker.hooks.hookmapcomponent method)": [[2, "taker.hooks.HookMapComponent.delete_neurons", false]], "delete_neurons() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.delete_neurons", false]], "detoxify (class in taker.detoxify)": [[2, "taker.detoxify.Detoxify", false]], "df_append() (taker.data_classes.rundatahistory method)": [[2, "taker.data_classes.RunDataHistory.df_append", false]], "disable_all_collect_hooks() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.disable_all_collect_hooks", false]], "do_attn_mean_offset (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.do_attn_mean_offset", false]], "dtype (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.dtype", false]], "dtypemap (class in taker.data_classes)": [[2, "taker.data_classes.DtypeMap", false]], "enable_collect_hooks() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.enable_collect_hooks", false]], "encode() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.encode", false]], "entropy() (in module taker.mia)": [[2, "taker.mia.entropy", false]], "eps (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.eps", false]], "eval_on_collected_datasets (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.eval_on_collected_datasets", false]], "eval_sample_size (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.eval_sample_size", false]], "evalalloutput (class in taker.data_classes)": [[2, "taker.data_classes.EvalAllOutput", false]], "evalconfig (class in taker.data_classes)": [[2, "taker.data_classes.EvalConfig", false]], "evaloutput (class in taker.data_classes)": [[2, "taker.data_classes.EvalOutput", false]], "evaluate() (in module taker.eval)": [[2, "taker.eval.evaluate", false]], "evaluate_all() (in module taker.eval)": [[2, "taker.eval.evaluate_all", false]], "evaluate_ce_loss() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_ce_loss", false]], "evaluate_ce_losses() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_ce_losses", false]], "evaluate_dataset() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_dataset", false]], "evaluate_human_eval() (in module taker.eval)": [[2, "taker.eval.evaluate_human_eval", false]], "evaluate_lm_eval() (in module taker.eval)": [[2, "taker.eval.evaluate_lm_eval", false]], "evaluate_mia() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_mia", false]], "evaluate_mmlu() (in module taker.eval)": [[2, "taker.eval.evaluate_mmlu", false]], "evaluate_topk_performance() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_topk_performance", false]], "evaluate_toxicity() (in module taker.eval)": [[2, "taker.eval.evaluate_toxicity", false]], "evaluate_toxicity() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.evaluate_toxicity", false]], "evaluate_wikitext() (in module taker.eval)": [[2, "taker.eval.evaluate_wikitext", false]], "evaluator (class in taker.eval)": [[2, "taker.eval.Evaluator", false]], "ff_eps (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.ff_eps", false]], "ff_frac (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.ff_frac", false]], "ff_offset_mode (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.ff_offset_mode", false]], "ff_scoring (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.ff_scoring", false]], "filter_birdless() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_birdless", false]], "filter_birds() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_birds", false]], "filter_cifar() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_cifar", false]], "filter_civil() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_civil", false]], "filter_codeless() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_codeless", false]], "filter_mushroom() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_mushroom", false]], "filter_mushroomless() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_mushroomless", false]], "filter_pile_general() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_pile_general", false]], "filter_rocket() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_rocket", false]], "filter_rocketless() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_rocketless", false]], "filter_toxic() (taker.texts.datasetfilters static method)": [[2, "taker.texts.DatasetFilters.filter_toxic", false]], "final_rms (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.final_rms", false]], "find_closest_string() (in module taker.texts)": [[2, "taker.texts.find_closest_string", false]], "flat_summary() (taker.data_classes.rundataitem method)": [[2, "taker.data_classes.RunDataItem.flat_summary", false]], "flatten_dict() (in module taker.data_classes)": [[2, "taker.data_classes.flatten_dict", false]], "focus (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.focus", false]], "format_mmlu_question() (in module taker.eval)": [[2, "taker.eval.format_mmlu_question", false]], "forsaken_pruning() (in module taker.prune)": [[2, "taker.prune.forsaken_pruning", false]], "forward() (taker.hooks.neuronactadd method)": [[2, "taker.hooks.NeuronActAdd.forward", false]], "forward() (taker.hooks.neuronfunctionlist method)": [[2, "taker.hooks.NeuronFunctionList.forward", false]], "forward() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.forward", false]], "forward() (taker.hooks.neuronoffset method)": [[2, "taker.hooks.NeuronOffset.forward", false]], "forward() (taker.hooks.neuronpostbias method)": [[2, "taker.hooks.NeuronPostBias.forward", false]], "forward() (taker.hooks.neuronreplace method)": [[2, "taker.hooks.NeuronReplace.forward", false]], "forward() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.forward", false]], "forward() (taker.hooks.neuronsave method)": [[2, "taker.hooks.NeuronSave.forward", false]], "forward() (taker.hooks.neuronwhiten method)": [[2, "taker.hooks.NeuronWhiten.forward", false]], "forward() (taker.model.model method)": [[2, "taker.model.Model.forward", false]], "forward() (taker.nn.inverselinear method)": [[2, "taker.nn.InverseLinear.forward", false]], "from_string() (taker.hooks.hookconfig method)": [[2, "taker.hooks.HookConfig.from_string", false]], "gated_mlp (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.gated_mlp", false]], "generate() (taker.model.model method)": [[2, "taker.model.Model.generate", false]], "generate_attn_qkv_functions() (in module taker.model_maps)": [[2, "taker.model_maps.generate_attn_qkv_functions", false]], "generate_batch() (taker.model.model method)": [[2, "taker.model.Model.generate_batch", false]], "generate_sizes_dict() (in module taker.model_maps)": [[2, "taker.model_maps.generate_sizes_dict", false]], "generated_text_include_prompt (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.generated_text_include_prompt", false]], "generated_text_length (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.generated_text_length", false]], "generated_text_num_samples (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.generated_text_num_samples", false]], "generated_text_prompt (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.generated_text_prompt", false]], "generated_text_temperature (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.generated_text_temperature", false]], "generators (class in taker.eval)": [[2, "taker.eval.Generators", false]], "get_all_layer_activations() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.get_all_layer_activations", false]], "get_all_layer_data() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.get_all_layer_data", false]], "get_attn_crossover() (in module taker.scoring)": [[2, "taker.scoring.get_attn_crossover", false]], "get_attn_weights() (taker.model.model method)": [[2, "taker.model.Model.get_attn_weights", false]], "get_attrs() (in module taker.model_maps)": [[2, "taker.model_maps.get_attrs", false]], "get_bias() (taker.hooks.neuronpostbias method)": [[2, "taker.hooks.NeuronPostBias.get_bias", false]], "get_cifar_dataset_configs() (in module taker.texts)": [[2, "taker.texts.get_cifar_dataset_configs", false]], "get_data() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.get_data", false]], "get_generator() (in module taker.eval)": [[2, "taker.eval.get_generator", false]], "get_hook_fn() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.get_hook_fn", false]], "get_hook_fn() (taker.model.model method)": [[2, "taker.model.Model.get_hook_fn", false]], "get_hooks() (taker.hooks.hookconfig method)": [[2, "taker.hooks.HookConfig.get_hooks", false]], "get_ids() (taker.model.model method)": [[2, "taker.model.Model.get_ids", false]], "get_image_classification_generator() (taker.eval.imagegenerators static method)": [[2, "taker.eval.ImageGenerators.get_image_classification_generator", false]], "get_input_activations() (in module taker.activations)": [[2, "taker.activations.get_input_activations", false]], "get_inputs_embeds() (taker.model.model method)": [[2, "taker.model.Model.get_inputs_embeds", false]], "get_inverse_mask() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.get_inverse_mask", false]], "get_layer_key_map() (in module taker.model_maps)": [[2, "taker.model_maps.get_layer_key_map", false]], "get_layer_names() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.get_layer_names", false]], "get_logits() (taker.model.model method)": [[2, "taker.model.Model.get_logits", false]], "get_many_generated_texts_generator() (taker.eval.generators static method)": [[2, "taker.eval.Generators.get_many_generated_texts_generator", false]], "get_mask() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.get_mask", false]], "get_masked_generator() (taker.eval.generators static method)": [[2, "taker.eval.Generators.get_masked_generator", false]], "get_membership_attack_data() (in module taker.mia)": [[2, "taker.mia.get_membership_attack_data", false]], "get_membership_attack_prob() (in module taker.mia)": [[2, "taker.mia.get_membership_attack_prob", false]], "get_midlayer_activations() (taker.model.model method)": [[2, "taker.model.Model.get_midlayer_activations", false]], "get_midlayer_data() (in module taker.activations)": [[2, "taker.activations.get_midlayer_data", false]], "get_mmlu_config() (in module taker.eval)": [[2, "taker.eval.get_mmlu_config", false]], "get_mmlu_generator() (in module taker.eval)": [[2, "taker.eval.get_mmlu_generator", false]], "get_mmlu_generator() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.get_mmlu_generator", false]], "get_model_and_tokenizer() (in module taker.detoxify)": [[2, "taker.detoxify.get_model_and_tokenizer", false]], "get_model_key_map() (in module taker.model_maps)": [[2, "taker.model_maps.get_model_key_map", false]], "get_module_for_hook_point() (taker.model.model method)": [[2, "taker.model.Model.get_module_for_hook_point", false]], "get_most_common_tokens() (taker.data_classes.rawaccuracydata method)": [[2, "taker.data_classes.RawAccuracyData.get_most_common_tokens", false]], "get_next_token_generator() (taker.eval.generators static method)": [[2, "taker.eval.Generators.get_next_token_generator", false]], "get_offset() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.get_offset", false]], "get_outputs_embeds() (taker.model.model method)": [[2, "taker.model.Model.get_outputs_embeds", false]], "get_percentages() (taker.data_classes.rawaccuracydata method)": [[2, "taker.data_classes.RawAccuracyData.get_percentages", false]], "get_pile_dataset_configs() (in module taker.texts)": [[2, "taker.texts.get_pile_dataset_configs", false]], "get_pixel_values() (taker.model.model method)": [[2, "taker.model.Model.get_pixel_values", false]], "get_random_subset() (in module taker.activations)": [[2, "taker.activations.get_random_subset", false]], "get_raw() (taker.data_classes.activationcollector method)": [[2, "taker.data_classes.ActivationCollector.get_raw", false]], "get_residual_diffs() (taker.model.model method)": [[2, "taker.model.Model.get_residual_diffs", false]], "get_residual_stream() (taker.model.model method)": [[2, "taker.model.Model.get_residual_stream", false]], "get_residual_stream_decoder() (taker.model.model method)": [[2, "taker.model.Model.get_residual_stream_decoder", false]], "get_skip_ids() (in module taker.eval)": [[2, "taker.eval.get_skip_ids", false]], "get_skip_ids() (taker.eval.evaluator static method)": [[2, "taker.eval.Evaluator.get_skip_ids", false]], "get_sliding_window_generator() (taker.eval.generators static method)": [[2, "taker.eval.Generators.get_sliding_window_generator", false]], "get_text_activations() (taker.model.model method)": [[2, "taker.model.Model.get_text_activations", false]], "get_top_frac() (in module taker.activations)": [[2, "taker.activations.get_top_frac", false]], "has_logged (taker.eval.mmlugenerator attribute)": [[2, "taker.eval.MmluGenerator.has_logged", false]], "hookconfig (class in taker.hooks)": [[2, "taker.hooks.HookConfig", false]], "hookmap (class in taker.hooks)": [[2, "taker.hooks.HookMap", false]], "hookmapcomponent (class in taker.hooks)": [[2, "taker.hooks.HookMapComponent", false]], "hooks_raw (taker.hooks.hookmap property)": [[2, "taker.hooks.HookMap.hooks_raw", false]], "hqq3 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.hqq3", false]], "hqq4_0 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.hqq4_0", false]], "hqq4_1 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.hqq4_1", false]], "hqq8 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.hqq8", false]], "id2label (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.id2label", false]], "image_size (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.image_size", false]], "imagegenerators (class in taker.eval)": [[2, "taker.eval.ImageGenerators", false]], "import_models() (taker.model.model method)": [[2, "taker.model.Model.import_models", false]], "infer_dataset_config() (in module taker.texts)": [[2, "taker.texts.infer_dataset_config", false]], "init_compile() (taker.model.model method)": [[2, "taker.model.Model.init_compile", false]], "init_hooks() (taker.model.model method)": [[2, "taker.model.Model.init_hooks", false]], "init_image_processor() (taker.model.model method)": [[2, "taker.model.Model.init_image_processor", false]], "init_mmlu_dataset() (in module taker.eval)": [[2, "taker.eval.init_mmlu_dataset", false]], "init_model() (taker.model.model method)": [[2, "taker.model.Model.init_model", false]], "init_peft() (taker.model.model method)": [[2, "taker.model.Model.init_peft", false]], "int4 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.int4", false]], "int8 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.int8", false]], "inverse_mask() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.inverse_mask", false]], "inverselinear (class in taker.nn)": [[2, "taker.nn.InverseLinear", false]], "is_low_precision (taker.data_classes.dtypemap property)": [[2, "taker.data_classes.DtypeMap.is_low_precision", false]], "is_low_precision (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.is_low_precision", false]], "is_train_mode (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.is_train_mode", false]], "is_true() (in module taker.parser)": [[2, "taker.parser.is_true", false]], "join_attn_head_dims() (taker.model.model method)": [[2, "taker.model.Model.join_attn_head_dims", false]], "keys (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys", false]], "keys_accuracy (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_accuracy", false]], "keys_areas (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_areas", false]], "keys_deletions (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_deletions", false]], "keys_deletions_per_layer (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_deletions_per_layer", false]], "keys_loss_data (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_loss_data", false]], "keys_raw (taker.data_classes.rundataitem attribute)": [[2, "taker.data_classes.RunDataItem.keys_raw", false]], "label2id (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.label2id", false]], "length() (taker.data_classes.rundatahistory method)": [[2, "taker.data_classes.RunDataHistory.length", false]], "load_checkpoint() (in module taker.detoxify)": [[2, "taker.detoxify.load_checkpoint", false]], "load_model() (in module taker.detoxify)": [[2, "taker.detoxify.load_model", false]], "load_sae() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.load_sae", false]], "load_sae_from_pretrained() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.load_sae_from_pretrained", false]], "load_state_dict() (taker.nn.inverselinear method)": [[2, "taker.nn.InverseLinear.load_state_dict", false]], "loading_bar_desc (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.loading_bar_desc", false]], "log_loss_normed (taker.data_classes.activationsummaryholder attribute)": [[2, "taker.data_classes.ActivationSummaryHolder.log_loss_normed", false]], "loss_data (taker.data_classes.evalalloutput attribute)": [[2, "taker.data_classes.EvalAllOutput.loss_data", false]], "loss_data (taker.data_classes.evaloutput attribute)": [[2, "taker.data_classes.EvalOutput.loss_data", false]], "loss_normed (taker.data_classes.activationsummaryholder attribute)": [[2, "taker.data_classes.ActivationSummaryHolder.loss_normed", false]], "losstracker (class in taker.eval)": [[2, "taker.eval.LossTracker", false]], "mask_fn (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.mask_fn", false]], "masked_frac_chosen (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_frac_chosen", false]], "masked_frac_chosen_masked (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_frac_chosen_masked", false]], "masked_frac_chosen_randomized (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_frac_chosen_randomized", false]], "masked_frac_chosen_unchanged (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_frac_chosen_unchanged", false]], "masked_generator() (in module taker.eval)": [[2, "taker.eval.masked_generator", false]], "masked_model (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_model", false]], "masked_token_id (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_token_id", false]], "masked_token_str (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.masked_token_str", false]], "mean (taker.data_classes.activationsummary attribute)": [[2, "id0", false], [2, "taker.data_classes.ActivationSummary.mean", false]], "mia_forget (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_forget", false]], "mia_forget_split (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_forget_split", false]], "mia_retain (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_retain", false]], "mia_retain_split (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_retain_split", false]], "mia_test (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_test", false]], "mia_test_split (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mia_test_split", false]], "misc (taker.data_classes.activationsummaryholder attribute)": [[2, "taker.data_classes.ActivationSummaryHolder.misc", false]], "misc (taker.data_classes.evalalloutput attribute)": [[2, "taker.data_classes.EvalAllOutput.misc", false]], "misc (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.misc", false]], "misc (taker.data_classes.evaloutput attribute)": [[2, "taker.data_classes.EvalOutput.misc", false]], "misc (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.misc", false]], "misc_data (taker.data_classes.activationoverview attribute)": [[2, "taker.data_classes.ActivationOverview.misc_data", false]], "mlp (taker.data_classes.activationoverview attribute)": [[2, "taker.data_classes.ActivationOverview.mlp", false]], "mlp_adjust_biases() (in module taker.nn)": [[2, "taker.nn.mlp_adjust_biases", false]], "mlp_delete_columns() (in module taker.nn)": [[2, "taker.nn.mlp_delete_columns", false]], "mlp_delete_columns_raw() (in module taker.nn)": [[2, "taker.nn.mlp_delete_columns_raw", false]], "mlp_delete_rows() (in module taker.nn)": [[2, "taker.nn.mlp_delete_rows", false]], "mlp_delete_rows_raw() (in module taker.nn)": [[2, "taker.nn.mlp_delete_rows_raw", false]], "mlp_svd_two_layer() (in module taker.nn)": [[2, "taker.nn.mlp_svd_two_layer", false]], "mlp_svd_two_layer_raw() (in module taker.nn)": [[2, "taker.nn.mlp_svd_two_layer_raw", false]], "mmlu_causal_generator() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_causal_generator", false]], "mmlu_configs() (in module taker.eval)": [[2, "taker.eval.mmlu_configs", false]], "mmlu_extract_guess_truth() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_extract_guess_truth", false]], "mmlu_format_question() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_format_question", false]], "mmlu_get_subsets() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_get_subsets", false]], "mmlu_init_dataset() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_init_dataset", false]], "mmlu_log() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_log", false]], "mmlu_masked_generator() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_masked_generator", false]], "mmlu_subsets (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.mmlu_subsets", false]], "mmlu_subsets() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_subsets", false]], "mmlu_verify_subset() (taker.eval.mmlugenerator method)": [[2, "taker.eval.MmluGenerator.mmlu_verify_subset", false]], "mmlugenerator (class in taker.eval)": [[2, "taker.eval.MmluGenerator", false]], "model (class in taker.model)": [[2, "taker.model.Model", false]], "model_device (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.model_device", false]], "model_modality (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.model_modality", false]], "model_repo (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.model_repo", false]], "model_size (taker.data_classes.pruningconfig property)": [[2, "taker.data_classes.PruningConfig.model_size", false]], "model_type (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.model_type", false]], "modellayermap (class in taker.model_maps)": [[2, "taker.model_maps.ModelLayerMap", false]], "modelmap (class in taker.model_maps)": [[2, "taker.model_maps.ModelMap", false]], "module": [[2, "module-taker", false], [2, "module-taker.activations", false], [2, "module-taker.data_classes", false], [2, "module-taker.detoxify", false], [2, "module-taker.eval", false], [2, "module-taker.hooks", false], [2, "module-taker.mia", false], [2, "module-taker.model", false], [2, "module-taker.model_maps", false], [2, "module-taker.model_repos", false], [2, "module-taker.nn", false], [2, "module-taker.parser", false], [2, "module-taker.prune", false], [2, "module-taker.scoring", false], [2, "module-taker.texts", false], [2, "module-taker.vit_processor", false]], "multilingual_toxic_xlm_r() (in module taker.detoxify)": [[2, "taker.detoxify.multilingual_toxic_xlm_r", false]], "n_ctx (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.n_ctx", false]], "n_heads (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.n_heads", false]], "n_key_value_heads (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.n_key_value_heads", false]], "n_layers (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.n_layers", false]], "n_shot (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.n_shot", false]], "n_steps (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.n_steps", false]], "neg_mass (taker.data_classes.activationsummary attribute)": [[2, "id1", false], [2, "taker.data_classes.ActivationSummary.neg_mass", false]], "neg_var (taker.data_classes.activationsummary attribute)": [[2, "id2", false], [2, "taker.data_classes.ActivationSummary.neg_var", false]], "neuronactadd (class in taker.hooks)": [[2, "taker.hooks.NeuronActAdd", false]], "neuronfunctionlist (class in taker.hooks)": [[2, "taker.hooks.NeuronFunctionList", false]], "neuronmask (class in taker.hooks)": [[2, "taker.hooks.NeuronMask", false]], "neuronoffset (class in taker.hooks)": [[2, "taker.hooks.NeuronOffset", false]], "neuronpostbias (class in taker.hooks)": [[2, "taker.hooks.NeuronPostBias", false]], "neuronreplace (class in taker.hooks)": [[2, "taker.hooks.NeuronReplace", false]], "neuronsae (class in taker.hooks)": [[2, "taker.hooks.NeuronSAE", false]], "neuronsave (class in taker.hooks)": [[2, "taker.hooks.NeuronSave", false]], "neuronwhiten (class in taker.hooks)": [[2, "taker.hooks.NeuronWhiten", false]], "nf4 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.nf4", false]], "noneconfig (class in taker.data_classes)": [[2, "taker.data_classes.NoneConfig", false]], "normalization_type (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.normalization_type", false]], "num_accurate (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_accurate", false]], "num_predictions (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_predictions", false]], "num_skip_accurate (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_skip_accurate", false]], "num_skip_predictions (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_skip_predictions", false]], "num_texts_to_skip (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.num_texts_to_skip", false]], "num_tokens_to_skip (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.num_tokens_to_skip", false]], "num_top_tokens (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.num_top_tokens", false]], "num_topk_accurate (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_topk_accurate", false]], "num_topk_skip_accurate (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.num_topk_skip_accurate", false]], "orig (taker.data_classes.activationsummaryholder attribute)": [[2, "taker.data_classes.ActivationSummaryHolder.orig", false]], "output_logits_soft_cap (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.output_logits_soft_cap", false]], "parallel_attn_mlp (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.parallel_attn_mlp", false]], "peak_centered (taker.data_classes.activationsummaryholder attribute)": [[2, "taker.data_classes.ActivationSummaryHolder.peak_centered", false]], "percent (taker.data_classes.evaloutput attribute)": [[2, "taker.data_classes.EvalOutput.percent", false]], "pos_count (taker.data_classes.activationsummary attribute)": [[2, "id3", false], [2, "taker.data_classes.ActivationSummary.pos_count", false]], "pos_mass (taker.data_classes.activationsummary attribute)": [[2, "id4", false], [2, "taker.data_classes.ActivationSummary.pos_mass", false]], "pos_var (taker.data_classes.activationsummary attribute)": [[2, "id5", false], [2, "taker.data_classes.ActivationSummary.pos_var", false]], "positional_embedding_type (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.positional_embedding_type", false]], "post_layernorm (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.post_layernorm", false]], "pre_layernorm (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.pre_layernorm", false]], "predict() (taker.detoxify.detoxify method)": [[2, "taker.detoxify.Detoxify.predict", false]], "prepare() (in module taker.texts)": [[2, "taker.texts.prepare", false]], "prepare_dataset() (in module taker.texts)": [[2, "taker.texts.prepare_dataset", false]], "prune_and_evaluate() (in module taker.prune)": [[2, "taker.prune.prune_and_evaluate", false]], "prune_random() (in module taker.prune)": [[2, "taker.prune.prune_random", false]], "prune_random_and_evaluate() (in module taker.prune)": [[2, "taker.prune.prune_random_and_evaluate", false]], "pruningconfig (class in taker.data_classes)": [[2, "taker.data_classes.PruningConfig", false]], "qdtypeconfigs (class in taker.data_classes)": [[2, "taker.data_classes.QDtypeConfigs", false]], "qfp8 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.qfp8", false]], "qint2 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.qint2", false]], "qint4 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.qint4", false]], "qint8 (taker.data_classes.qdtypeconfigs attribute)": [[2, "taker.data_classes.QDtypeConfigs.qint8", false]], "raw (taker.data_classes.activationoverview attribute)": [[2, "taker.data_classes.ActivationOverview.raw", false]], "rawaccuracydata (class in taker.data_classes)": [[2, "taker.data_classes.RawAccuracyData", false]], "recalculate_activations (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.recalculate_activations", false]], "register_hooks() (taker.model.model method)": [[2, "taker.model.Model.register_hooks", false]], "remove_hooks() (taker.model.model method)": [[2, "taker.model.Model.remove_hooks", false]], "reset() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.reset", false]], "reset() (taker.hooks.neuronactadd method)": [[2, "taker.hooks.NeuronActAdd.reset", false]], "reset() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.reset", false]], "reset() (taker.hooks.neuronoffset method)": [[2, "taker.hooks.NeuronOffset.reset", false]], "reset() (taker.hooks.neuronpostbias method)": [[2, "taker.hooks.NeuronPostBias.reset", false]], "reset() (taker.hooks.neuronreplace method)": [[2, "taker.hooks.NeuronReplace.reset", false]], "reset() (taker.hooks.neuronsae method)": [[2, "taker.hooks.NeuronSAE.reset", false]], "reset() (taker.hooks.neuronsave method)": [[2, "taker.hooks.NeuronSave.reset", false]], "reset() (taker.hooks.neuronwhiten method)": [[2, "taker.hooks.NeuronWhiten.reset", false]], "reset_neuron_replace() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.reset_neuron_replace", false]], "restart() (taker.hooks.neuronactadd method)": [[2, "taker.hooks.NeuronActAdd.restart", false]], "restart() (taker.hooks.neuronreplace method)": [[2, "taker.hooks.NeuronReplace.restart", false]], "return_model_as_generator() (taker.eval.imagegenerators static method)": [[2, "taker.eval.ImageGenerators.return_model_as_generator", false]], "rotary_base (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.rotary_base", false]], "rotary_dim (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.rotary_dim", false]], "run_evaluation() (in module taker.eval)": [[2, "taker.eval.run_evaluation", false]], "run_example_input() (taker.model.model method)": [[2, "taker.model.Model.run_example_input", false]], "run_pre_test (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.run_pre_test", false]], "run_pruning() (in module taker.prune)": [[2, "taker.prune.run_pruning", false]], "run_random_masking() (taker.eval.generators static method)": [[2, "taker.eval.Generators.run_random_masking", false]], "rundatahistory (class in taker.data_classes)": [[2, "taker.data_classes.RunDataHistory", false]], "rundataitem (class in taker.data_classes)": [[2, "taker.data_classes.RunDataItem", false]], "sample_size (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.sample_size", false]], "save (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.save", false]], "save_numpy_ff() (in module taker.activations)": [[2, "taker.activations.save_numpy_ff", false]], "save_subdirectory (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.save_subdirectory", false]], "save_timestamped_tensor_dict() (in module taker.activations)": [[2, "taker.activations.save_timestamped_tensor_dict", false]], "scale_attn_by_inverse_layer_idx (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.scale_attn_by_inverse_layer_idx", false]], "score_and_prune() (in module taker.prune)": [[2, "taker.prune.score_and_prune", false]], "score_indices() (in module taker.scoring)": [[2, "taker.scoring.score_indices", false]], "score_indices_by() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by", false]], "score_indices_by_abs() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_abs", false]], "score_indices_by_freq() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_freq", false]], "score_indices_by_mean() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_mean", false]], "score_indices_by_rms() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_rms", false]], "score_indices_by_sqrt() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_sqrt", false]], "score_indices_by_std() (in module taker.scoring)": [[2, "taker.scoring.score_indices_by_std", false]], "score_indices_randomly() (in module taker.scoring)": [[2, "taker.scoring.score_indices_randomly", false]], "scoring_normalization (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.scoring_normalization", false]], "script_path() (in module taker.texts)": [[2, "taker.texts.script_path", false]], "set_actadd() (taker.hooks.neuronactadd method)": [[2, "taker.hooks.NeuronActAdd.set_actadd", false]], "set_all_layer_parameters() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.set_all_layer_parameters", false]], "set_hook_config() (taker.model.model method)": [[2, "taker.model.Model.set_hook_config", false]], "set_hook_parameter() (taker.hooks.hookmap method)": [[2, "taker.hooks.HookMap.set_hook_parameter", false]], "set_mask() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.set_mask", false]], "set_offset() (taker.hooks.neuronmask method)": [[2, "taker.hooks.NeuronMask.set_offset", false]], "set_offset() (taker.hooks.neuronoffset method)": [[2, "taker.hooks.NeuronOffset.set_offset", false]], "set_offsets() (taker.hooks.hookmapcomponent method)": [[2, "taker.hooks.HookMapComponent.set_offsets", false]], "show_details() (taker.model.model method)": [[2, "taker.model.Model.show_details", false]], "skip_token_ids (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.skip_token_ids", false]], "skip_token_strings (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.skip_token_strings", false]], "sliding_window_buffer_size (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.sliding_window_buffer_size", false]], "sliding_window_dataset() (in module taker.eval)": [[2, "taker.eval.sliding_window_dataset", false]], "sliding_window_step_size (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.sliding_window_step_size", false]], "split_attn_head_dims() (taker.model.model method)": [[2, "taker.model.Model.split_attn_head_dims", false]], "split_list() (in module taker.parser)": [[2, "taker.parser.split_list", false]], "sqrt (taker.data_classes.activationsummary attribute)": [[2, "id6", false], [2, "taker.data_classes.ActivationSummary.sqrt", false]], "ssdtensordict (class in taker.vit_processor)": [[2, "taker.vit_processor.SsdTensorDict", false]], "ssdvitprocessor (class in taker.vit_processor)": [[2, "taker.vit_processor.SsdVitProcessor", false]], "start_index (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.start_index", false]], "state_dict() (taker.nn.inverselinear method)": [[2, "taker.nn.InverseLinear.state_dict", false]], "std (taker.data_classes.activationsummary attribute)": [[2, "id7", false], [2, "taker.data_classes.ActivationSummary.std", false]], "streaming (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.streaming", false]], "summarize() (taker.eval.losstracker method)": [[2, "taker.eval.LossTracker.summarize", false]], "summary() (taker.data_classes.activationcollector method)": [[2, "taker.data_classes.ActivationCollector.summary", false]], "summary() (taker.data_classes.rundataitem method)": [[2, "taker.data_classes.RunDataItem.summary", false]], "summary_wandb() (taker.data_classes.rundataitem method)": [[2, "taker.data_classes.RunDataItem.summary_wandb", false]], "svd_attn (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.svd_attn", false]], "svd_combine_biases (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.svd_combine_biases", false]], "svd_two_layer_raw_heads() (in module taker.nn)": [[2, "taker.nn.svd_two_layer_raw_heads", false]], "taker": [[2, "module-taker", false]], "taker.activations": [[2, "module-taker.activations", false]], "taker.data_classes": [[2, "module-taker.data_classes", false]], "taker.detoxify": [[2, "module-taker.detoxify", false]], "taker.eval": [[2, "module-taker.eval", false]], "taker.hooks": [[2, "module-taker.hooks", false]], "taker.mia": [[2, "module-taker.mia", false]], "taker.model": [[2, "module-taker.model", false]], "taker.model_maps": [[2, "module-taker.model_maps", false]], "taker.model_repos": [[2, "module-taker.model_repos", false]], "taker.nn": [[2, "module-taker.nn", false]], "taker.parser": [[2, "module-taker.parser", false]], "taker.prune": [[2, "module-taker.prune", false]], "taker.scoring": [[2, "module-taker.scoring", false]], "taker.texts": [[2, "module-taker.texts", false]], "taker.vit_processor": [[2, "module-taker.vit_processor", false]], "texts_viewed (taker.data_classes.activationoverview attribute)": [[2, "taker.data_classes.ActivationOverview.texts_viewed", false]], "to() (taker.hooks.neuronactadd method)": [[2, "taker.hooks.NeuronActAdd.to", false]], "to() (taker.hooks.neuronreplace method)": [[2, "taker.hooks.NeuronReplace.to", false]], "to() (taker.model.model method)": [[2, "taker.model.Model.to", false]], "to() (taker.nn.inverselinear method)": [[2, "taker.nn.InverseLinear.to", false]], "to() (taker.vit_processor.ssdtensordict method)": [[2, "taker.vit_processor.SsdTensorDict.to", false]], "to_dict() (taker.data_classes.evalalloutput method)": [[2, "taker.data_classes.EvalAllOutput.to_dict", false]], "to_dict() (taker.data_classes.evalconfig method)": [[2, "taker.data_classes.EvalConfig.to_dict", false]], "to_dict() (taker.data_classes.pruningconfig method)": [[2, "taker.data_classes.PruningConfig.to_dict", false]], "to_dict() (taker.data_classes.rawaccuracydata method)": [[2, "taker.data_classes.RawAccuracyData.to_dict", false]], "token_counts (taker.data_classes.rawaccuracydata attribute)": [[2, "taker.data_classes.RawAccuracyData.token_counts", false]], "token_limit (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.token_limit", false]], "tokenizer_name (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.tokenizer_name", false]], "top_k_tokens() (taker.eval.evaluator static method)": [[2, "taker.eval.Evaluator.top_k_tokens", false]], "topk (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.topk", false]], "topk (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.topk", false]], "toxic_albert() (in module taker.detoxify)": [[2, "taker.detoxify.toxic_albert", false]], "toxic_bert() (in module taker.detoxify)": [[2, "taker.detoxify.toxic_bert", false]], "unbiased_albert() (in module taker.detoxify)": [[2, "taker.detoxify.unbiased_albert", false]], "unbiased_toxic_roberta() (in module taker.detoxify)": [[2, "taker.detoxify.unbiased_toxic_roberta", false]], "undo() (taker.hooks.neuronoffset method)": [[2, "taker.hooks.NeuronOffset.undo", false]], "undo() (taker.hooks.neuronwhiten method)": [[2, "taker.hooks.NeuronWhiten.undo", false]], "unembed() (taker.model.model method)": [[2, "taker.model.Model.unembed", false]], "unscale (taker.hooks.neuronwhiten property)": [[2, "taker.hooks.NeuronWhiten.unscale", false]], "update() (taker.data_classes.rundataitem method)": [[2, "taker.data_classes.RunDataItem.update", false]], "update_param() (in module taker.model_maps)": [[2, "taker.model_maps.update_param", false]], "update_pbar() (taker.eval.evaluator method)": [[2, "taker.eval.Evaluator.update_pbar", false]], "use_accelerator (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.use_accelerator", false]], "use_attn_scale (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.use_attn_scale", false]], "use_local_attn (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.use_local_attn", false]], "verbose (taker.data_classes.evalconfig attribute)": [[2, "taker.data_classes.EvalConfig.verbose", false]], "wandb_entity (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.wandb_entity", false]], "wandb_project (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.wandb_project", false]], "wandb_run_name (taker.data_classes.pruningconfig attribute)": [[2, "taker.data_classes.PruningConfig.wandb_run_name", false]], "window_size (taker.model_maps.configclass attribute)": [[2, "taker.model_maps.ConfigClass.window_size", false]]}, "objects": {"": [[2, 0, 0, "-", "taker"]], "taker": [[2, 0, 0, "-", "activations"], [2, 0, 0, "-", "data_classes"], [2, 0, 0, "-", "detoxify"], [2, 0, 0, "-", "eval"], [2, 0, 0, "-", "hooks"], [2, 0, 0, "-", "mia"], [2, 0, 0, "-", "model"], [2, 0, 0, "-", "model_maps"], [2, 0, 0, "-", "model_repos"], [2, 0, 0, "-", "nn"], [2, 0, 0, "-", "parser"], [2, 0, 0, "-", "prune"], [2, 0, 0, "-", "scoring"], [2, 0, 0, "-", "texts"], [2, 0, 0, "-", "vit_processor"]], "taker.activations": [[2, 1, 1, "", "choose_attn_heads_by"], [2, 1, 1, "", "choose_attn_heads_by_mean"], [2, 1, 1, "", "choose_attn_heads_by_median"], [2, 1, 1, "", "get_input_activations"], [2, 1, 1, "", "get_midlayer_data"], [2, 1, 1, "", "get_random_subset"], [2, 1, 1, "", "get_top_frac"], [2, 1, 1, "", "save_numpy_ff"], [2, 1, 1, "", "save_timestamped_tensor_dict"]], "taker.data_classes": [[2, 2, 1, "", "ActivationCollector"], [2, 2, 1, "", "ActivationOverview"], [2, 2, 1, "", "ActivationSummary"], [2, 2, 1, "", "ActivationSummaryHolder"], [2, 2, 1, "", "DtypeMap"], [2, 2, 1, "", "EvalAllOutput"], [2, 2, 1, "", "EvalConfig"], [2, 2, 1, "", "EvalOutput"], [2, 2, 1, "", "NoneConfig"], [2, 2, 1, "", "PruningConfig"], [2, 2, 1, "", "QDtypeConfigs"], [2, 2, 1, "", "RawAccuracyData"], [2, 2, 1, "", "RunDataHistory"], [2, 2, 1, "", "RunDataItem"], [2, 1, 1, "", "flatten_dict"]], "taker.data_classes.ActivationCollector": [[2, 3, 1, "", "add"], [2, 3, 1, "", "add_all"], [2, 3, 1, "", "get_raw"], [2, 3, 1, "", "summary"]], "taker.data_classes.ActivationOverview": [[2, 4, 1, "", "attn"], [2, 4, 1, "", "misc_data"], [2, 4, 1, "", "mlp"], [2, 4, 1, "", "raw"], [2, 4, 1, "", "texts_viewed"]], "taker.data_classes.ActivationSummary": [[2, 4, 1, "id0", "mean"], [2, 4, 1, "id1", "neg_mass"], [2, 4, 1, "id2", "neg_var"], [2, 4, 1, "id3", "pos_count"], [2, 4, 1, "id4", "pos_mass"], [2, 4, 1, "id5", "pos_var"], [2, 4, 1, "id6", "sqrt"], [2, 4, 1, "id7", "std"]], "taker.data_classes.ActivationSummaryHolder": [[2, 4, 1, "", "log_loss_normed"], [2, 4, 1, "", "loss_normed"], [2, 4, 1, "", "misc"], [2, 4, 1, "", "orig"], [2, 4, 1, "", "peak_centered"]], "taker.data_classes.DtypeMap": [[2, 3, 1, "", "compile"], [2, 5, 1, "", "is_low_precision"]], "taker.data_classes.EvalAllOutput": [[2, 4, 1, "", "accuracy"], [2, 3, 1, "", "add"], [2, 4, 1, "", "loss_data"], [2, 4, 1, "", "misc"], [2, 3, 1, "", "to_dict"]], "taker.data_classes.EvalConfig": [[2, 4, 1, "", "batch_size"], [2, 4, 1, "", "dataset_custom_load_fn"], [2, 4, 1, "", "dataset_filter"], [2, 4, 1, "", "dataset_has_test_split"], [2, 4, 1, "", "dataset_image_key"], [2, 4, 1, "", "dataset_image_label_key"], [2, 4, 1, "", "dataset_name"], [2, 4, 1, "", "dataset_repo"], [2, 4, 1, "", "dataset_split"], [2, 4, 1, "", "dataset_subset"], [2, 4, 1, "", "dataset_text_key"], [2, 4, 1, "", "dataset_text_label_key"], [2, 4, 1, "", "dataset_type"], [2, 4, 1, "", "generated_text_include_prompt"], [2, 4, 1, "", "generated_text_length"], [2, 4, 1, "", "generated_text_num_samples"], [2, 4, 1, "", "generated_text_prompt"], [2, 4, 1, "", "generated_text_temperature"], [2, 4, 1, "", "is_train_mode"], [2, 4, 1, "", "loading_bar_desc"], [2, 4, 1, "", "masked_frac_chosen"], [2, 4, 1, "", "masked_frac_chosen_masked"], [2, 4, 1, "", "masked_frac_chosen_randomized"], [2, 4, 1, "", "masked_frac_chosen_unchanged"], [2, 4, 1, "", "masked_model"], [2, 4, 1, "", "masked_token_id"], [2, 4, 1, "", "masked_token_str"], [2, 4, 1, "", "mia_forget"], [2, 4, 1, "", "mia_forget_split"], [2, 4, 1, "", "mia_retain"], [2, 4, 1, "", "mia_retain_split"], [2, 4, 1, "", "mia_test"], [2, 4, 1, "", "mia_test_split"], [2, 4, 1, "", "misc"], [2, 4, 1, "", "mmlu_subsets"], [2, 4, 1, "", "n_shot"], [2, 4, 1, "", "num_texts_to_skip"], [2, 4, 1, "", "num_tokens_to_skip"], [2, 4, 1, "", "num_top_tokens"], [2, 4, 1, "", "sample_size"], [2, 4, 1, "", "skip_token_ids"], [2, 4, 1, "", "skip_token_strings"], [2, 4, 1, "", "sliding_window_buffer_size"], [2, 4, 1, "", "sliding_window_step_size"], [2, 4, 1, "", "start_index"], [2, 4, 1, "", "streaming"], [2, 3, 1, "", "to_dict"], [2, 4, 1, "", "topk"], [2, 4, 1, "", "verbose"]], "taker.data_classes.EvalOutput": [[2, 4, 1, "", "loss_data"], [2, 4, 1, "", "misc"], [2, 4, 1, "", "percent"]], "taker.data_classes.PruningConfig": [[2, 4, 1, "", "additional_datasets"], [2, 3, 1, "", "arg_items"], [2, 3, 1, "", "arg_keys"], [2, 4, 1, "", "attn_eps"], [2, 4, 1, "", "attn_frac"], [2, 4, 1, "", "attn_mode"], [2, 4, 1, "", "attn_offset_mode"], [2, 4, 1, "", "attn_prune_heads"], [2, 4, 1, "", "attn_prune_heads_mode"], [2, 4, 1, "", "attn_scoring"], [2, 4, 1, "", "collection_sample_size"], [2, 4, 1, "", "cripple"], [2, 5, 1, "", "datasets"], [2, 4, 1, "", "do_attn_mean_offset"], [2, 4, 1, "", "dtype"], [2, 4, 1, "", "eval_on_collected_datasets"], [2, 4, 1, "", "eval_sample_size"], [2, 4, 1, "", "ff_eps"], [2, 4, 1, "", "ff_frac"], [2, 4, 1, "", "ff_offset_mode"], [2, 4, 1, "", "ff_scoring"], [2, 4, 1, "", "focus"], [2, 4, 1, "", "mask_fn"], [2, 4, 1, "", "misc"], [2, 4, 1, "", "model_device"], [2, 4, 1, "", "model_repo"], [2, 5, 1, "", "model_size"], [2, 4, 1, "", "n_steps"], [2, 4, 1, "", "recalculate_activations"], [2, 4, 1, "", "run_pre_test"], [2, 4, 1, "", "save"], [2, 4, 1, "", "save_subdirectory"], [2, 4, 1, "", "scoring_normalization"], [2, 4, 1, "", "svd_attn"], [2, 4, 1, "", "svd_combine_biases"], [2, 3, 1, "", "to_dict"], [2, 4, 1, "", "token_limit"], [2, 4, 1, "", "topk"], [2, 4, 1, "", "use_accelerator"], [2, 4, 1, "", "wandb_entity"], [2, 4, 1, "", "wandb_project"], [2, 4, 1, "", "wandb_run_name"]], "taker.data_classes.QDtypeConfigs": [[2, 4, 1, "", "hqq3"], [2, 4, 1, "", "hqq4_0"], [2, 4, 1, "", "hqq4_1"], [2, 4, 1, "", "hqq8"], [2, 4, 1, "", "int4"], [2, 4, 1, "", "int8"], [2, 4, 1, "", "nf4"], [2, 4, 1, "", "qfp8"], [2, 4, 1, "", "qint2"], [2, 4, 1, "", "qint4"], [2, 4, 1, "", "qint8"]], "taker.data_classes.RawAccuracyData": [[2, 3, 1, "", "get_most_common_tokens"], [2, 3, 1, "", "get_percentages"], [2, 4, 1, "", "num_accurate"], [2, 4, 1, "", "num_predictions"], [2, 4, 1, "", "num_skip_accurate"], [2, 4, 1, "", "num_skip_predictions"], [2, 4, 1, "", "num_topk_accurate"], [2, 4, 1, "", "num_topk_skip_accurate"], [2, 3, 1, "", "to_dict"], [2, 4, 1, "", "token_counts"]], "taker.data_classes.RunDataHistory": [[2, 3, 1, "", "add"], [2, 3, 1, "", "calculate_areas"], [2, 3, 1, "", "df_append"], [2, 3, 1, "", "length"]], "taker.data_classes.RunDataItem": [[2, 3, 1, "", "flat_summary"], [2, 4, 1, "", "keys"], [2, 4, 1, "", "keys_accuracy"], [2, 4, 1, "", "keys_areas"], [2, 4, 1, "", "keys_deletions"], [2, 4, 1, "", "keys_deletions_per_layer"], [2, 4, 1, "", "keys_loss_data"], [2, 4, 1, "", "keys_raw"], [2, 3, 1, "", "summary"], [2, 3, 1, "", "summary_wandb"], [2, 3, 1, "", "update"]], "taker.detoxify": [[2, 2, 1, "", "Detoxify"], [2, 1, 1, "", "get_model_and_tokenizer"], [2, 1, 1, "", "load_checkpoint"], [2, 1, 1, "", "load_model"], [2, 1, 1, "", "multilingual_toxic_xlm_r"], [2, 1, 1, "", "toxic_albert"], [2, 1, 1, "", "toxic_bert"], [2, 1, 1, "", "unbiased_albert"], [2, 1, 1, "", "unbiased_toxic_roberta"]], "taker.detoxify.Detoxify": [[2, 3, 1, "", "predict"]], "taker.eval": [[2, 2, 1, "", "Evaluator"], [2, 2, 1, "", "Generators"], [2, 2, 1, "", "ImageGenerators"], [2, 2, 1, "", "LossTracker"], [2, 2, 1, "", "MmluGenerator"], [2, 1, 1, "", "choose_functions"], [2, 1, 1, "", "evaluate"], [2, 1, 1, "", "evaluate_all"], [2, 1, 1, "", "evaluate_human_eval"], [2, 1, 1, "", "evaluate_lm_eval"], [2, 1, 1, "", "evaluate_mmlu"], [2, 1, 1, "", "evaluate_toxicity"], [2, 1, 1, "", "evaluate_wikitext"], [2, 1, 1, "", "format_mmlu_question"], [2, 1, 1, "", "get_generator"], [2, 1, 1, "", "get_mmlu_config"], [2, 1, 1, "", "get_mmlu_generator"], [2, 1, 1, "", "get_skip_ids"], [2, 1, 1, "", "init_mmlu_dataset"], [2, 1, 1, "", "masked_generator"], [2, 1, 1, "", "mmlu_configs"], [2, 1, 1, "", "run_evaluation"], [2, 1, 1, "", "sliding_window_dataset"]], "taker.eval.Evaluator": [[2, 3, 1, "", "evaluate_ce_loss"], [2, 3, 1, "", "evaluate_ce_losses"], [2, 3, 1, "", "evaluate_dataset"], [2, 3, 1, "", "evaluate_mia"], [2, 3, 1, "", "evaluate_topk_performance"], [2, 3, 1, "", "evaluate_toxicity"], [2, 3, 1, "", "get_skip_ids"], [2, 3, 1, "", "top_k_tokens"], [2, 3, 1, "", "update_pbar"]], "taker.eval.Generators": [[2, 3, 1, "", "get_many_generated_texts_generator"], [2, 3, 1, "", "get_masked_generator"], [2, 3, 1, "", "get_next_token_generator"], [2, 3, 1, "", "get_sliding_window_generator"], [2, 3, 1, "", "run_random_masking"]], "taker.eval.ImageGenerators": [[2, 3, 1, "", "get_image_classification_generator"], [2, 3, 1, "", "return_model_as_generator"]], "taker.eval.LossTracker": [[2, 3, 1, "", "add"], [2, 3, 1, "", "add_all"], [2, 3, 1, "", "summarize"]], "taker.eval.MmluGenerator": [[2, 4, 1, "", "dataset_repo"], [2, 3, 1, "", "get_mmlu_generator"], [2, 4, 1, "", "has_logged"], [2, 3, 1, "", "mmlu_causal_generator"], [2, 3, 1, "", "mmlu_extract_guess_truth"], [2, 3, 1, "", "mmlu_format_question"], [2, 3, 1, "", "mmlu_get_subsets"], [2, 3, 1, "", "mmlu_init_dataset"], [2, 3, 1, "", "mmlu_log"], [2, 3, 1, "", "mmlu_masked_generator"], [2, 3, 1, "", "mmlu_subsets"], [2, 3, 1, "", "mmlu_verify_subset"]], "taker.hooks": [[2, 2, 1, "", "HookConfig"], [2, 2, 1, "", "HookMap"], [2, 2, 1, "", "HookMapComponent"], [2, 2, 1, "", "NeuronActAdd"], [2, 2, 1, "", "NeuronFunctionList"], [2, 2, 1, "", "NeuronMask"], [2, 2, 1, "", "NeuronOffset"], [2, 2, 1, "", "NeuronPostBias"], [2, 2, 1, "", "NeuronReplace"], [2, 2, 1, "", "NeuronSAE"], [2, 2, 1, "", "NeuronSave"], [2, 2, 1, "", "NeuronWhiten"]], "taker.hooks.HookConfig": [[2, 3, 1, "", "add_hook"], [2, 3, 1, "", "from_string"], [2, 3, 1, "", "get_hooks"]], "taker.hooks.HookMap": [[2, 5, 1, "", "all_hooks"], [2, 3, 1, "", "delete_attn_neurons"], [2, 3, 1, "", "delete_mlp_neurons"], [2, 3, 1, "", "disable_all_collect_hooks"], [2, 3, 1, "", "enable_collect_hooks"], [2, 3, 1, "", "get_all_layer_activations"], [2, 3, 1, "", "get_all_layer_data"], [2, 3, 1, "", "get_data"], [2, 3, 1, "", "get_hook_fn"], [2, 3, 1, "", "get_layer_names"], [2, 5, 1, "", "hooks_raw"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "reset_neuron_replace"], [2, 3, 1, "", "set_all_layer_parameters"], [2, 3, 1, "", "set_hook_parameter"]], "taker.hooks.HookMapComponent": [[2, 3, 1, "", "delete_neurons"], [2, 3, 1, "", "set_offsets"]], "taker.hooks.NeuronActAdd": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "restart"], [2, 3, 1, "", "set_actadd"], [2, 3, 1, "", "to"]], "taker.hooks.NeuronFunctionList": [[2, 3, 1, "", "forward"]], "taker.hooks.NeuronMask": [[2, 3, 1, "", "delete_neurons"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "get_inverse_mask"], [2, 3, 1, "", "get_mask"], [2, 3, 1, "", "get_offset"], [2, 3, 1, "", "inverse_mask"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "set_mask"], [2, 3, 1, "", "set_offset"]], "taker.hooks.NeuronOffset": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "set_offset"], [2, 3, 1, "", "undo"]], "taker.hooks.NeuronPostBias": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "get_bias"], [2, 3, 1, "", "reset"]], "taker.hooks.NeuronReplace": [[2, 3, 1, "", "add_token"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "restart"], [2, 3, 1, "", "to"]], "taker.hooks.NeuronSAE": [[2, 3, 1, "", "decode"], [2, 3, 1, "", "encode"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "load_sae"], [2, 3, 1, "", "load_sae_from_pretrained"], [2, 3, 1, "", "reset"]], "taker.hooks.NeuronSave": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "reset"]], "taker.hooks.NeuronWhiten": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "reset"], [2, 3, 1, "", "undo"], [2, 5, 1, "", "unscale"]], "taker.mia": [[2, 1, 1, "", "collect_prob"], [2, 1, 1, "", "entropy"], [2, 1, 1, "", "get_membership_attack_data"], [2, 1, 1, "", "get_membership_attack_prob"]], "taker.model": [[2, 2, 1, "", "Model"]], "taker.model.Model": [[2, 3, 1, "", "center_unembed"], [2, 3, 1, "", "collect_recent_attn_pre_out"], [2, 3, 1, "", "collect_recent_mlp_pre_out"], [2, 3, 1, "", "components_loop"], [2, 3, 1, "", "default_config"], [2, 3, 1, "", "forward"], [2, 3, 1, "", "generate"], [2, 3, 1, "", "generate_batch"], [2, 3, 1, "", "get_attn_weights"], [2, 3, 1, "", "get_hook_fn"], [2, 3, 1, "", "get_ids"], [2, 3, 1, "", "get_inputs_embeds"], [2, 3, 1, "", "get_logits"], [2, 3, 1, "", "get_midlayer_activations"], [2, 3, 1, "", "get_module_for_hook_point"], [2, 3, 1, "", "get_outputs_embeds"], [2, 3, 1, "", "get_pixel_values"], [2, 3, 1, "", "get_residual_diffs"], [2, 3, 1, "", "get_residual_stream"], [2, 3, 1, "", "get_residual_stream_decoder"], [2, 3, 1, "", "get_text_activations"], [2, 3, 1, "", "import_models"], [2, 3, 1, "", "init_compile"], [2, 3, 1, "", "init_hooks"], [2, 3, 1, "", "init_image_processor"], [2, 3, 1, "", "init_model"], [2, 3, 1, "", "init_peft"], [2, 3, 1, "", "join_attn_head_dims"], [2, 3, 1, "", "register_hooks"], [2, 3, 1, "", "remove_hooks"], [2, 3, 1, "", "run_example_input"], [2, 3, 1, "", "set_hook_config"], [2, 3, 1, "", "show_details"], [2, 3, 1, "", "split_attn_head_dims"], [2, 3, 1, "", "to"], [2, 3, 1, "", "unembed"]], "taker.model_maps": [[2, 2, 1, "", "ConfigClass"], [2, 2, 1, "", "ModelLayerMap"], [2, 2, 1, "", "ModelMap"], [2, 1, 1, "", "build_gemma2_layer_map"], [2, 1, 1, "", "build_gemma_layer_map"], [2, 1, 1, "", "build_gpt2_layer_map"], [2, 1, 1, "", "build_gpt_neox_layer_map"], [2, 1, 1, "", "build_llama_layer_map"], [2, 1, 1, "", "build_mistral_layer_map"], [2, 1, 1, "", "build_opt_layer_map"], [2, 1, 1, "", "build_phi3_layer_map"], [2, 1, 1, "", "build_phi_layer_map"], [2, 1, 1, "", "build_roberta_layer_map"], [2, 1, 1, "", "build_t5_layer_map"], [2, 1, 1, "", "build_vit_layer_map"], [2, 1, 1, "", "convert_hf_model_config"], [2, 1, 1, "", "generate_attn_qkv_functions"], [2, 1, 1, "", "generate_sizes_dict"], [2, 1, 1, "", "get_attrs"], [2, 1, 1, "", "get_layer_key_map"], [2, 1, 1, "", "get_model_key_map"], [2, 1, 1, "", "update_param"]], "taker.model_maps.ConfigClass": [[2, 4, 1, "", "act_fn"], [2, 4, 1, "", "architecture"], [2, 4, 1, "", "attn_scale"], [2, 4, 1, "", "attn_scores_soft_cap"], [2, 4, 1, "", "attn_types"], [2, 4, 1, "", "d_head"], [2, 4, 1, "", "d_mlp"], [2, 4, 1, "", "d_model"], [2, 4, 1, "", "d_vocab"], [2, 4, 1, "", "eps"], [2, 4, 1, "", "final_rms"], [2, 4, 1, "", "gated_mlp"], [2, 4, 1, "", "id2label"], [2, 4, 1, "", "image_size"], [2, 4, 1, "", "is_low_precision"], [2, 4, 1, "", "label2id"], [2, 4, 1, "", "model_modality"], [2, 4, 1, "", "model_type"], [2, 4, 1, "", "n_ctx"], [2, 4, 1, "", "n_heads"], [2, 4, 1, "", "n_key_value_heads"], [2, 4, 1, "", "n_layers"], [2, 4, 1, "", "normalization_type"], [2, 4, 1, "", "output_logits_soft_cap"], [2, 4, 1, "", "parallel_attn_mlp"], [2, 4, 1, "", "positional_embedding_type"], [2, 4, 1, "", "post_layernorm"], [2, 4, 1, "", "pre_layernorm"], [2, 4, 1, "", "rotary_base"], [2, 4, 1, "", "rotary_dim"], [2, 4, 1, "", "scale_attn_by_inverse_layer_idx"], [2, 4, 1, "", "tokenizer_name"], [2, 4, 1, "", "use_attn_scale"], [2, 4, 1, "", "use_local_attn"], [2, 4, 1, "", "window_size"]], "taker.nn": [[2, 2, 1, "", "InverseLinear"], [2, 1, 1, "", "mlp_adjust_biases"], [2, 1, 1, "", "mlp_delete_columns"], [2, 1, 1, "", "mlp_delete_columns_raw"], [2, 1, 1, "", "mlp_delete_rows"], [2, 1, 1, "", "mlp_delete_rows_raw"], [2, 1, 1, "", "mlp_svd_two_layer"], [2, 1, 1, "", "mlp_svd_two_layer_raw"], [2, 1, 1, "", "svd_two_layer_raw_heads"]], "taker.nn.InverseLinear": [[2, 3, 1, "", "forward"], [2, 3, 1, "", "load_state_dict"], [2, 3, 1, "", "state_dict"], [2, 3, 1, "", "to"]], "taker.parser": [[2, 1, 1, "", "cli_parser"], [2, 1, 1, "", "is_true"], [2, 1, 1, "", "split_list"]], "taker.prune": [[2, 1, 1, "", "forsaken_pruning"], [2, 1, 1, "", "prune_and_evaluate"], [2, 1, 1, "", "prune_random"], [2, 1, 1, "", "prune_random_and_evaluate"], [2, 1, 1, "", "run_pruning"], [2, 1, 1, "", "score_and_prune"]], "taker.scoring": [[2, 1, 1, "", "get_attn_crossover"], [2, 1, 1, "", "score_indices"], [2, 1, 1, "", "score_indices_by"], [2, 1, 1, "", "score_indices_by_abs"], [2, 1, 1, "", "score_indices_by_freq"], [2, 1, 1, "", "score_indices_by_mean"], [2, 1, 1, "", "score_indices_by_rms"], [2, 1, 1, "", "score_indices_by_sqrt"], [2, 1, 1, "", "score_indices_by_std"], [2, 1, 1, "", "score_indices_randomly"]], "taker.texts": [[2, 2, 1, "", "DatasetFilters"], [2, 1, 1, "", "find_closest_string"], [2, 1, 1, "", "get_cifar_dataset_configs"], [2, 1, 1, "", "get_pile_dataset_configs"], [2, 1, 1, "", "infer_dataset_config"], [2, 1, 1, "", "prepare"], [2, 1, 1, "", "prepare_dataset"], [2, 1, 1, "", "script_path"]], "taker.texts.DatasetFilters": [[2, 3, 1, "", "filter_birdless"], [2, 3, 1, "", "filter_birds"], [2, 3, 1, "", "filter_cifar"], [2, 3, 1, "", "filter_civil"], [2, 3, 1, "", "filter_codeless"], [2, 3, 1, "", "filter_mushroom"], [2, 3, 1, "", "filter_mushroomless"], [2, 3, 1, "", "filter_pile_general"], [2, 3, 1, "", "filter_rocket"], [2, 3, 1, "", "filter_rocketless"], [2, 3, 1, "", "filter_toxic"]], "taker.vit_processor": [[2, 2, 1, "", "SsdTensorDict"], [2, 2, 1, "", "SsdVitProcessor"]], "taker.vit_processor.SsdTensorDict": [[2, 3, 1, "", "to"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:property"}, "terms": {"": 2, "0": 2, "0001": 2, "001": 2, "06": 2, "1": 2, "10": 2, "1000": 2, "10000": 2, "100000": 2, "1024": 2, "1150": 2, "15": 2, "15m": 2, "1913": 2, "1914": 2, "1e": 2, "1e5": 2, "2": 2, "224": 2, "2324": 2, "2325": 2, "2382": 2, "3": 2, "32": 2, "3420": 2, "3741": 2, "4": 2, "4443": 2, "4d": 2, "5": 2, "50": 2, "5112": 2, "5113": 2, "512": 2, "5593": 2, "6": 2, "6122": 2, "64": 2, "7": 2, "8": 2, "A": 2, "For": 2, "If": 2, "In": 2, "It": 2, "Its": 2, "OR": 2, "That": 2, "The": 2, "To": 2, "_dataset": 2, "_description_": 2, "_load_in_4bit": 2, "_load_in_8bit": 2, "_summary_": 2, "_type_": 2, "ab": 2, "absolut": 2, "acc": 2, "accept": 2, "accuraci": [1, 2], "act_fn": [1, 2], "actadd": 2, "activ": 1, "activationcollector": [1, 2], "activationoverview": [1, 2], "activationsummari": [1, 2], "activationsummaryhold": [1, 2], "actual": 2, "ad": 2, "add": [0, 1, 2], "add_al": [1, 2], "add_args_exclud": 2, "add_args_fn": 2, "add_arguments_exclud": 2, "add_hook": [1, 2], "add_token": [1, 2], "addit": 2, "additional_dataset": [1, 2], "adjust": 2, "after": 2, "afterward": 2, "again": 2, "all": 2, "all_hook": [1, 2], "allow_nan": 2, "alreadi": 2, "also": 2, "alter": 2, "although": 2, "alwai": 2, "an": 2, "ani": 2, "appli": 2, "ar": 2, "architectur": [1, 2], "area": 2, "arg": 2, "arg_item": [1, 2], "arg_kei": [1, 2], "argpars": 2, "argument": 2, "arrai": 2, "as_str": 2, "assign": 2, "assum": 2, "asynchron": 2, "attach": 2, "attent": 2, "attention_mask": 2, "attn": [1, 2], "attn_del": 2, "attn_ep": [1, 2], "attn_frac": [1, 2], "attn_mod": [1, 2], "attn_offset_mod": [1, 2], "attn_peak": 2, "attn_prun": 2, "attn_prune_head": [1, 2], "attn_prune_heads_mod": [1, 2], "attn_raw": 2, "attn_scal": [1, 2], "attn_scor": [1, 2], "attn_scores_soft_cap": [1, 2], "attn_threshold": 2, "attn_typ": [1, 2], "attr_str": 2, "autograd": 2, "autorestart": 2, "averag": 2, "avoid": 2, "axi": 2, "b": 2, "b_in": 2, "b_out": 2, "back": 2, "base": 2, "baselin": 2, "basic": 2, "batch": 2, "batch_prompt": 2, "batch_siz": [1, 2], "been": 2, "befor": 2, "being": 2, "below": 2, "between": 2, "bfloat16": 2, "bfp16": 2, "bia": 2, "bias": 2, "bias_fn": 2, "bitsandbyt": 2, "bitsandbytesconfig": 2, "blacklist": 2, "bnb_4bit_compute_dtyp": 2, "bnb_4bit_quant_storag": 2, "bnb_4bit_quant_typ": 2, "bnb_4bit_use_double_qu": 2, "bool": 2, "boolean": 2, "both": 2, "buffer": 2, "buffer_s": 2, "build_gemma2_layer_map": [1, 2], "build_gemma_layer_map": [1, 2], "build_gpt2_layer_map": [1, 2], "build_gpt_neox_layer_map": [1, 2], "build_llama_layer_map": [1, 2], "build_mistral_layer_map": [1, 2], "build_opt_layer_map": [1, 2], "build_phi3_layer_map": [1, 2], "build_phi_layer_map": [1, 2], "build_roberta_layer_map": [1, 2], "build_t5_layer_map": [1, 2], "build_vit_layer_map": [1, 2], "built": 2, "c": 2, "cach": 2, "calcul": 2, "calculate_area": [1, 2], "calculate_attn": 2, "calculate_ff": 2, "call": 2, "callabl": 2, "can": 2, "care": 2, "cast": 2, "causal": 2, "cdoubl": 2, "center_unemb": [1, 2], "cfg": 2, "challeng": 2, "channel_wis": 2, "channels_last": 2, "check": 2, "check_accuraci": 2, "check_skip": 2, "checkpoint": 2, "choose_attn_heads_bi": [1, 2], "choose_attn_heads_by_mean": [1, 2], "choose_attn_heads_by_median": [1, 2], "choose_funct": [1, 2], "class": 2, "classif": 2, "clean": 2, "cli_pars": [1, 2], "code": 2, "codeparrot": 2, "cointain": 2, "collect": 2, "collect_attn": 2, "collect_ff": 2, "collect_id": 2, "collect_prob": [1, 2], "collect_raw": 2, "collect_recent_attn_pre_out": [1, 2], "collect_recent_mlp_pre_out": [1, 2], "collection_sample_s": [1, 2], "column": 2, "command": 2, "comment": 2, "compar": 2, "compens": 2, "compil": [1, 2], "complex": 2, "complex128": 2, "compon": 2, "components_loop": [1, 2], "compos": 2, "comput": 2, "config": 2, "config_arg": 2, "config_nam": 2, "config_str": 2, "configclass": [1, 2], "configur": 2, "contain": 2, "content": [0, 1], "continu": 2, "convert": 2, "convert_hf_model_config": [1, 2], "convert_tokens_to_id": 2, "copi": 2, "correspond": 2, "count": 2, "cpu": 2, "creat": 2, "crippl": [1, 2], "cripple_activations_data": 2, "cripple_out": 2, "cross": 2, "crossov": 2, "crossover_multipl": 2, "cuda": 2, "current": 2, "d": 2, "d_head": [1, 2], "d_mid": 2, "d_mlp": [1, 2], "d_model": [1, 2], "d_vocab": [1, 2], "dampen": 2, "data": 2, "data_class": 1, "data_list": 2, "data_nam": 2, "data_out": 2, "data_point": 2, "data_typ": 2, "dataitem": 2, "dataset": [1, 2], "dataset_custom_load_fn": [1, 2], "dataset_evalu": 2, "dataset_filt": [1, 2], "dataset_has_test_split": [1, 2], "dataset_image_kei": [1, 2], "dataset_image_label_kei": [1, 2], "dataset_item": 2, "dataset_nam": [1, 2], "dataset_repo": [1, 2], "dataset_split": [1, 2], "dataset_str": 2, "dataset_subset": [1, 2], "dataset_text_kei": [1, 2], "dataset_text_label_kei": [1, 2], "dataset_texts_to_skip": 2, "dataset_tokens_to_skip": 2, "dataset_typ": [1, 2], "datasetfilt": [1, 2], "datset_tokens_to_skip": 2, "datum": 2, "decod": [1, 2], "decoder_block": 2, "default": 2, "default_config": [1, 2], "defin": 2, "delet": 2, "delete_attn_neuron": [1, 2], "delete_bias": 2, "delete_mlp_neuron": [1, 2], "delete_neuron": [1, 2], "deletion_indic": 2, "deletion_row": 2, "deletions_per_lay": 2, "dens": 2, "depend": 2, "deprec": 2, "descend": 2, "design": 2, "desir": 2, "destin": 2, "detach": 2, "detail": 0, "determin": 2, "determinist": 2, "detoxifi": 1, "deviat": 2, "devic": 2, "device_map": 2, "df_append": [1, 2], "dict": 2, "dictionari": 2, "did": 2, "differ": 2, "dim": 2, "dimens": 2, "disable_all_collect_hook": [1, 2], "do": 2, "do_attn_mean_offset": [1, 2], "do_model_import": 2, "do_sampl": 2, "doe": 2, "doubl": 2, "dtype": [1, 2], "dtypemap": [1, 2], "e": 2, "each": 2, "earli": 2, "easier": 2, "easili": 2, "eg": 2, "einops_str": 2, "either": 2, "embedded_output": 2, "enable_collect_hook": [1, 2], "encod": [1, 2], "end": 2, "enforc": 2, "entropi": [1, 2], "env": 2, "ep": [1, 2], "epsilon": 2, "eval": 1, "eval_config": 2, "eval_mod": 2, "eval_on_collected_dataset": [1, 2], "eval_sample_s": [1, 2], "evalalloutput": [1, 2], "evalconfig": [1, 2], "evaloutput": [1, 2], "evalu": [1, 2], "evaluate_al": [1, 2], "evaluate_ce_loss": [1, 2], "evaluate_dataset": [1, 2], "evaluate_human_ev": [1, 2], "evaluate_lm_ev": [1, 2], "evaluate_mia": [1, 2], "evaluate_mmlu": [1, 2], "evaluate_topk_perform": [1, 2], "evaluate_tox": [1, 2], "evaluate_wikitext": [1, 2], "everi": 2, "exactli": 2, "exampl": 2, "except": 2, "exclud": 2, "exist": 2, "expect": 2, "expected_id": 2, "fact": 2, "fals": 2, "faster": 2, "ff": 2, "ff_del": 2, "ff_ep": [1, 2], "ff_frac": [1, 2], "ff_offset_mod": [1, 2], "ff_peak": 2, "ff_prune": 2, "ff_raw": 2, "ff_score": [1, 2], "ff_threshold": 2, "field": 2, "fig": 2, "file": 2, "filenam": 2, "filter_bird": [1, 2], "filter_birdless": [1, 2], "filter_cifar": [1, 2], "filter_civil": [1, 2], "filter_codeless": [1, 2], "filter_mushroom": [1, 2], "filter_mushroomless": [1, 2], "filter_pile_gener": [1, 2], "filter_rocket": [1, 2], "filter_rocketless": [1, 2], "filter_tox": [1, 2], "final_rm": [1, 2], "find_closest_str": [1, 2], "first": 2, "flat_summari": [1, 2], "flatten_dict": [1, 2], "float": 2, "float16": 2, "float32": 2, "float64": 2, "focu": [1, 2], "focus_activations_data": 2, "focus_out": 2, "follow": 2, "forget_load": 2, "format": 2, "format_mmlu_quest": [1, 2], "former": 2, "forsaken_prun": [1, 2], "forward": [1, 2], "fp16": 2, "fp4": 2, "frac": 2, "fraction": 2, "freq": 2, "freq_multipl": 2, "from": 2, "from_str": [1, 2], "function": 2, "futur": 2, "g": 2, "gated_mlp": [1, 2], "gener": [1, 2], "generate_attn_qkv_funct": [1, 2], "generate_batch": [1, 2], "generate_sizes_dict": [1, 2], "generated_text_include_prompt": [1, 2], "generated_text_length": [1, 2], "generated_text_num_sampl": [1, 2], "generated_text_prompt": [1, 2], "generated_text_temperatur": [1, 2], "get": 2, "get_all_layer_activ": [1, 2], "get_all_layer_data": [1, 2], "get_attn_crossov": [1, 2], "get_attn_weight": [1, 2], "get_attr": [1, 2], "get_bia": [1, 2], "get_cifar_dataset_config": [1, 2], "get_data": [1, 2], "get_gener": [1, 2], "get_hook": [1, 2], "get_hook_fn": [1, 2], "get_id": [1, 2], "get_image_classification_gener": [1, 2], "get_input_activ": [1, 2], "get_inputs_emb": [1, 2], "get_inverse_mask": [1, 2], "get_layer_key_map": [1, 2], "get_layer_nam": [1, 2], "get_logit": [1, 2], "get_many_generated_texts_gener": [1, 2], "get_mask": [1, 2], "get_masked_gener": [1, 2], "get_membership_attack_data": [1, 2], "get_membership_attack_prob": [1, 2], "get_midlayer_activ": [1, 2], "get_midlayer_data": [1, 2], "get_mmlu_config": [1, 2], "get_mmlu_gener": [1, 2], "get_model_and_token": [1, 2], "get_model_key_map": [1, 2], "get_module_for_hook_point": [1, 2], "get_most_common_token": [1, 2], "get_next_token_gener": [1, 2], "get_offset": [1, 2], "get_outputs_emb": [1, 2], "get_percentag": [1, 2], "get_pile_dataset_config": [1, 2], "get_pixel_valu": [1, 2], "get_random_subset": [1, 2], "get_raw": [1, 2], "get_residual_diff": [1, 2], "get_residual_stream": [1, 2], "get_residual_stream_decod": [1, 2], "get_skip_id": [1, 2], "get_sliding_window_gener": [1, 2], "get_swap_module_params_on_convers": 2, "get_text_activ": [1, 2], "get_top_frac": [1, 2], "give": 2, "given": 2, "gpu1": 2, "greedi": 2, "group_siz": 2, "ha": 2, "half": 2, "handl": 2, "has_log": [1, 2], "have": 2, "head": 2, "here": 2, "hf": 2, "highest": 2, "hold": 2, "holder": 2, "hook": 1, "hook_config": 2, "hook_typ": 2, "hookconfig": [1, 2], "hookmap": [1, 2], "hookmapcompon": [1, 2], "hooks_raw": [1, 2], "host": 2, "how": 2, "howev": 2, "hqq3": [1, 2], "hqq4_0": [1, 2], "hqq4_1": [1, 2], "hqq8": [1, 2], "hqqconfig": 2, "huggingfac": 2, "huggingface_config_path": 2, "i": 2, "id": 2, "id2label": [1, 2], "ignor": 2, "ignore_w": 2, "imag": 2, "image_s": [1, 2], "imagegener": [1, 2], "img": 2, "img_dict": 2, "import": 2, "import_model": [1, 2], "in_featur": 2, "includ": 2, "include_answ": 2, "indic": 2, "infer_dataset_config": [1, 2], "info": 2, "init_compil": [1, 2], "init_hook": [1, 2], "init_image_processor": [1, 2], "init_mmlu_dataset": [1, 2], "init_model": [1, 2], "init_peft": [1, 2], "initi": 2, "initial_prompt": 2, "input": 2, "input_data": 2, "input_id": 2, "inputs_emb": 2, "inspir": 2, "instanc": 2, "instead": 2, "int": 2, "int4": [1, 2], "int8": [1, 2], "integr": 2, "intersect": 2, "inv_out": 2, "invers": 2, "inverse_mask": [1, 2], "inverselinear": [1, 2], "io_typ": 2, "is_first_run": 2, "is_low_precis": [1, 2], "is_train_mod": [1, 2], "is_tru": [1, 2], "item": 2, "iter": 2, "its": 2, "j": 2, "jigsaw": 2, "join_attn_head_dim": [1, 2], "just": 2, "k": 2, "keep_indic": 2, "keep_var": 2, "keepdim": 2, "kei": [1, 2], "keys_accuraci": [1, 2], "keys_area": [1, 2], "keys_delet": [1, 2], "keys_deletions_per_lay": [1, 2], "keys_loss_data": [1, 2], "keys_raw": [1, 2], "keyword": 2, "kwarg": 2, "l1_norm_coeff": 2, "label": 2, "label2id": [1, 2], "languag": 2, "latter": 2, "layer": 2, "layer_1": 2, "layer_2": 2, "length": [1, 2], "lightweight": 2, "limit": 2, "linear": 2, "list": 2, "llm_int8_enable_fp32_cpu_offload": 2, "llm_int8_has_fp16_weight": 2, "llm_int8_skip_modul": 2, "llm_int8_threshold": 2, "load": 2, "load_checkpoint": [1, 2], "load_in_4bit": 2, "load_in_8bit": 2, "load_model": [1, 2], "load_sa": [1, 2], "load_sae_from_pretrain": [1, 2], "load_state_dict": [1, 2], "loading_bar_desc": [1, 2], "log_loss": 2, "log_loss_norm": [1, 2], "logit": 2, "logitlen": 2, "loss": 2, "loss_data": [1, 2], "loss_norm": [1, 2], "losstrack": [1, 2], "lr": 2, "make": 2, "manual": 2, "mark": 2, "mask": 2, "mask_fn": [1, 2], "masked_frac_chosen": [1, 2], "masked_frac_chosen_mask": [1, 2], "masked_frac_chosen_random": [1, 2], "masked_frac_chosen_unchang": [1, 2], "masked_gener": [1, 2], "masked_mod": 2, "masked_model": [1, 2], "masked_token_id": [1, 2], "masked_token_str": [1, 2], "mass": 2, "match": 2, "matric": 2, "matrix": 2, "max_length": 2, "max_token": 2, "maximum": 2, "mean": [1, 2], "mean_activ": 2, "memori": 2, "memory_format": 2, "method": 2, "mia": 1, "mia_forget": [1, 2], "mia_forget_split": [1, 2], "mia_retain": [1, 2], "mia_retain_split": [1, 2], "mia_test": [1, 2], "mia_test_split": [1, 2], "midlay": 2, "misc": [1, 2], "misc_data": [1, 2], "miss": 2, "missing_kei": 2, "mlp": [1, 2], "mlp_adjust_bias": [1, 2], "mlp_delete_column": [1, 2], "mlp_delete_columns_raw": [1, 2], "mlp_delete_row": [1, 2], "mlp_delete_rows_raw": [1, 2], "mlp_svd_two_lay": [1, 2], "mlp_svd_two_layer_raw": [1, 2], "mmlu": 2, "mmlu_causal_gener": [1, 2], "mmlu_config": [1, 2], "mmlu_extract_guess_truth": [1, 2], "mmlu_format_quest": [1, 2], "mmlu_get_subset": [1, 2], "mmlu_init_dataset": [1, 2], "mmlu_log": [1, 2], "mmlu_masked_gener": [1, 2], "mmlu_subset": [1, 2], "mmlu_verify_subset": [1, 2], "mmlugener": [1, 2], "model": 1, "model_devic": [1, 2], "model_kwarg": 2, "model_map": 1, "model_mod": [1, 2], "model_nam": 2, "model_old": 1, "model_repo": 1, "model_s": [1, 2], "model_typ": [1, 2], "modellayermap": [1, 2], "modelmap": [1, 2], "modif": 2, "modifi": 2, "modul": 1, "more": 2, "most": 2, "move": 2, "multi": 2, "multilingu": 2, "multilingual_toxic_xlm_r": [1, 2], "multipl": 2, "must": 2, "mvp": 2, "my": 2, "n_ctx": [1, 2], "n_head": [1, 2], "n_key_value_head": [1, 2], "n_layer": [1, 2], "n_question": 2, "n_sampl": 2, "n_shot": [1, 2], "n_step": [1, 2], "name": 2, "namedtupl": 2, "namespac": 2, "nbit": 2, "ndarrai": 2, "need": 2, "neg": 2, "neg_mass": [1, 2], "neg_var": [1, 2], "network": 2, "neural": 2, "neuron": 2, "neuron_function_list": 2, "neuronactadd": [1, 2], "neuronfunctionlist": [1, 2], "neuronmask": [1, 2], "neuronoffset": [1, 2], "neuronpostbia": [1, 2], "neuronreplac": [1, 2], "neuronsa": [1, 2], "neuronsav": [1, 2], "neuronwhiten": [1, 2], "new": 2, "new_mask": 2, "new_param": 2, "next": 2, "nf4": [1, 2], "nickypro": 2, "nn": 1, "non": 2, "non_block": 2, "none": 2, "noneconfig": [1, 2], "normalis": 2, "normalization_typ": [1, 2], "note": 2, "np": 2, "null": 2, "num": 2, "num_accur": [1, 2], "num_class": 2, "num_predict": [1, 2], "num_skip_accur": [1, 2], "num_skip_predict": [1, 2], "num_text": 2, "num_texts_to_skip": [1, 2], "num_tokens_to_skip": [1, 2], "num_top_token": [1, 2], "num_topk_accur": [1, 2], "num_topk_skip_accur": [1, 2], "number": 2, "numer": 2, "obj": 2, "object": 2, "official_model_nam": 2, "offlin": 2, "offload_meta": 2, "offset": 2, "offset_v": 2, "onc": 2, "one": 2, "ones": 2, "onli": 2, "opt": 2, "optim": 2, "option": 2, "order": 2, "ordereddict": 2, "orig": [1, 2], "orig_id": 2, "origin": 2, "original_bias": 2, "original_weight": 2, "otherwis": 2, "out": 2, "out_featur": 2, "out_proj": 2, "output": 2, "output_devic": 2, "output_logits_soft_cap": [1, 2], "outputs_emb": 2, "overridden": 2, "p": 2, "packag": 1, "paper": 2, "parallel_attn_mlp": [1, 2], "param": 2, "param_kei": 2, "param_typ": 2, "paramet": 2, "parent_kei": 2, "pars": 2, "parser": 1, "part": 2, "pass": 2, "path": 2, "pbar": 2, "peak_cent": [1, 2], "peft": 2, "peft_config_or_path": 2, "peftconfig": 2, "per": 2, "percent": [1, 2], "perceptron": 2, "perform": 2, "persist": 2, "pile": 2, "pile_codeless": 2, "pin": 2, "pixel": 2, "pixel_valu": 2, "place": 2, "pleas": 2, "plu": 2, "point": 2, "pos_count": [1, 2], "pos_mass": [1, 2], "pos_var": [1, 2], "posit": 2, "positional_embedding_typ": [1, 2], "possibl": 2, "post_layernorm": [1, 2], "pre": 2, "pre_layernorm": [1, 2], "pre_out": 2, "predict": [1, 2], "predictor": 2, "prefix": 2, "prepar": [1, 2], "prepare_dataset": [1, 2], "present": 2, "preserv": 2, "print": 2, "probabl": 2, "processor": 2, "produc": 2, "prompt": 2, "properti": 2, "provid": 2, "prune": 1, "prune_and_evalu": [1, 2], "prune_random": [1, 2], "prune_random_and_evalu": [1, 2], "pruning_config": 2, "pruningconfig": [1, 2], "pt": 2, "qdtypeconfig": [1, 2], "qfp8": [1, 2], "qint2": [1, 2], "qint4": [1, 2], "qint8": [1, 2], "quant_method": 2, "quantizationmethod": 2, "quanto": 2, "quantoconfig": 2, "rais": 2, "rand": 2, "random": 2, "random_subset_frac": 2, "randomli": 2, "ratio": 2, "raw": [1, 2], "raw_img": 2, "rawaccuracydata": [1, 2], "real": 2, "recalcul": 2, "recalculate_activ": [1, 2], "recip": 2, "recommend": 2, "refer": 2, "regist": 2, "register_hook": [1, 2], "reinit_hook": 2, "relat": 2, "releas": 2, "removal_indic": 2, "remove_hook": [1, 2], "remove_indic": 2, "replac": 2, "repo": 2, "repositori": 2, "requir": 2, "requires_grad": 2, "research": 2, "reset": [1, 2], "reset_neuron_replac": [1, 2], "residual_stream": 2, "respect": 2, "restart": [1, 2], "restructuredtext": 0, "result": 2, "retain_load": 2, "return": 2, "return_model_as_gener": [1, 2], "return_tensor": 2, "right": 2, "rm": 2, "root": 2, "rotary_bas": [1, 2], "rotary_dim": [1, 2], "round_zero": 2, "row": 2, "run": 2, "run_evalu": [1, 2], "run_example_input": [1, 2], "run_pre_test": [1, 2], "run_prun": [1, 2], "run_random_mask": [1, 2], "rundatahistori": [1, 2], "rundataitem": [1, 2], "runtimeerror": 2, "sae": 2, "sae_config": 2, "sae_id": 2, "same": 2, "sampl": 2, "sample_acc_data": 2, "sample_s": [1, 2], "sauc": 2, "save": [1, 2], "save_numpy_ff": [1, 2], "save_subdirectori": [1, 2], "save_timestamped_tensor_dict": [1, 2], "scale_attn_by_inverse_layer_idx": [1, 2], "scale_quant_param": 2, "score": 1, "score_and_prun": [1, 2], "score_indic": [1, 2], "score_indices_bi": [1, 2], "score_indices_by_ab": [1, 2], "score_indices_by_freq": [1, 2], "score_indices_by_mean": [1, 2], "score_indices_by_rm": [1, 2], "score_indices_by_sqrt": [1, 2], "score_indices_by_std": [1, 2], "score_indices_randomli": [1, 2], "scoring_func": 2, "scoring_norm": [1, 2], "script_path": [1, 2], "second": 2, "see": [0, 2], "select": 2, "self": 2, "sep": 2, "separ": 2, "sequenc": 2, "set": 2, "set_actadd": [1, 2], "set_all_layer_paramet": [1, 2], "set_hook_config": [1, 2], "set_hook_paramet": [1, 2], "set_mask": [1, 2], "set_offset": [1, 2], "shallow": 2, "shape": 2, "should": 2, "show_detail": [1, 2], "sigmoid_offset": 2, "signatur": 2, "silent": 2, "similar": 2, "sinc": 2, "singl": 2, "size": 2, "skip": 2, "skip_id": 2, "skip_input_or_output": 2, "skip_str": 2, "skip_token_id": [1, 2], "skip_token_str": [1, 2], "skip_typ": 2, "sliding_window_buffer_s": [1, 2], "sliding_window_dataset": [1, 2], "sliding_window_step_s": [1, 2], "small": 2, "so": 2, "some": 2, "special": 2, "specif": 2, "specifi": 2, "split": 2, "split_attn_head_dim": [1, 2], "split_list": [1, 2], "sqrt": [1, 2], "squar": 2, "ssdtensordict": [1, 2], "ssdvitprocessor": [1, 2], "stabil": 2, "standard": 2, "start_index": [1, 2], "state": 2, "state_dict": [1, 2], "static": 2, "std": [1, 2], "step": 2, "step_siz": 2, "store": 2, "str": 2, "str_dtype": 2, "stream": [1, 2], "strict": 2, "strictli": 2, "string": 2, "subclass": 2, "submodul": 1, "subset": 2, "subset_nam": 2, "summar": [1, 2], "summari": [1, 2], "summary_wandb": [1, 2], "support": 2, "sure": 2, "svd": 2, "svd_attn": [1, 2], "svd_combine_bias": [1, 2], "svd_dtype": 2, "svd_two_layer_raw_head": [1, 2], "synapt": 2, "syntax": 0, "take": 2, "task": 2, "tasksourc": 2, "temperatur": 2, "tensor": 2, "tensor_dict": 2, "test": 2, "test_load": 2, "text": 1, "text_activ": 2, "texts_view": [1, 2], "than": 2, "them": 2, "thi": 2, "thing": 2, "thought": 2, "threshold": 2, "time": 2, "tinyllama": 2, "to_dict": [1, 2], "token": 2, "token_count": [1, 2], "token_index": 2, "token_limit": [1, 2], "tokenizer_nam": [1, 2], "tokenizer_repo": 2, "top": 2, "top_frac": 2, "top_k_token": [1, 2], "topk": [1, 2], "topk_skip": 2, "torch": 2, "torch_doctest_cuda1": 2, "torch_dtyp": 2, "total_acc_data": 2, "toxic": 2, "toxic_albert": [1, 2], "toxic_bert": [1, 2], "train": 2, "tri": 2, "true": 2, "tupl": 2, "two": 2, "type": 2, "u": 2, "uint8": 2, "unbias": 2, "unbiased_albert": [1, 2], "unbiased_toxic_roberta": [1, 2], "unchang": 2, "undefin": 2, "undo": [1, 2], "unemb": [1, 2], "unexpected_kei": 2, "unintend": 2, "union": 2, "unless": 2, "unscal": [1, 2], "updat": [1, 2], "update_param": [1, 2], "update_pbar": [1, 2], "updated_weight": 2, "us": [0, 2], "use_acceler": [1, 2], "use_attn_scal": [1, 2], "use_local_attn": [1, 2], "use_wandb": 2, "user": 2, "util": 2, "v": 2, "valu": 2, "values_tensor": 2, "var": 2, "varianc": 2, "vector": 2, "verbos": [1, 2], "veri": 2, "version": 2, "view_as_float": 2, "vit_processor": 1, "w_in": 2, "w_in_head": 2, "w_out": 2, "w_out_head": 2, "wa": 2, "wandb_ent": [1, 2], "wandb_project": [1, 2], "wandb_run_nam": [1, 2], "want": 2, "we": 2, "weight": 2, "weight_fn": 2, "weight_quant_param": 2, "well": 2, "what": 2, "when": 2, "where": 2, "whether": 2, "which": 2, "while": 2, "whole": 2, "whose": 2, "window_s": [1, 2], "within": 2, "work": 2, "would": 2, "x": 2, "xdoctest": 2, "y": 2, "yield": 2, "your": 0, "z": 2, "zero": 2, "zero_quant_param": 2}, "titles": ["taker documentation", "taker", "taker package"], "titleterms": {"activ": 2, "content": 2, "data_class": 2, "detoxifi": 2, "document": 0, "eval": 2, "hook": 2, "mia": 2, "model": 2, "model_map": 2, "model_old": 2, "model_repo": 2, "modul": 2, "nn": 2, "packag": 2, "parser": 2, "prune": 2, "score": 2, "submodul": 2, "taker": [0, 1, 2], "text": 2, "vit_processor": 2}})